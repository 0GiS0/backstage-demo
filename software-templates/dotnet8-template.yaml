apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
# some metadata about the template itself
metadata:
  name: dotnet8-template
  title: Dotnet 8 Template
  description: Scaffold a new .NET 8 project
spec:
  owner: user:0GiS0
  type: service

# these are the steps which are rendered in the frontend with the form input
  parameters:
    - title: Complete the form to create a new .NET 8 project
      required:
        - name
        - description
      properties:
        name:
          type: string
          title: Project Name
          description: The name of the project
          ui:autofocus: true
        description:
          title: Description
          type: string
          description: A description for the component
        owner:
          title: Owner
          type: string
          description: The owner of the project
          ui:field: OwnerPicker
          ui:options:
            catalogFilter:
              kind: User
    - title: Choose a destination
      required:
        - repoUrl
      properties:
        repoUrl:
          title: Repository URL
          type: string        
          description: The URL of the repository
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  # here's the steps that are executed in series in the scaffolder backend
  # You can see all actions you have registered here: http://localhost:3000/create/actions
  steps:
    - id: fetch-base
      name: Fetch Base
      action: fetch:template
      input:
        url: https://github.com/0GiS0/dotnet8-backstage-template
        values:
          name: ${{ parameters.name }}
          owner: ${{ parameters.owner }}
          description: ${{ parameters.description }}
          destination: ${{ parameters.repoUrl | parseRepoUrl }}
          repoUrl: ${{ parameters.repoUrl }}          
    - id: fetch-docs
      name: Fetch Docs
      action: fetch:plain
      input:
        targetPath: ./docs
        url: https://github.com/0GiS0/dotnet8-backstage-template
    - id: publish
      name: Publish
      action: publish:github
      input:
        allowedHosts: ['github.com']
        description: This is ${{ parameters.name }}
        repoUrl: ${{ parameters.repoUrl }}
        repoVisibility: private
        gitCommitMessage: Create scaffold
        topics: ['backstage-include','returngis']
        defaultBranch: main
        secrets: {
          MY_SECRET: This is a secret
        }
        variables: {
          MY_VARIABLE: This is a variable
        }
    - id: github-action
      name: Stating GitHub action       
      action: github:actions:dispatch
      input:
        workflowId: ci.yml # ID of GitHub action WorkFlow
        repoUrl: ${{ parameters.repoUrl }}     
        branchOrTagName: 'main'
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: '/catalog-info.yaml'

  # some outputs which are saved along with the job for use in the frontend
  output:
    links:
      - title: Repository
        url: ${{ steps['publish'].output.remoteUrl }}
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
      - title: See GitHub Action
        url: ${{ steps['github-action'].output.url }}
